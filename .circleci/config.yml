version: 2.1
orbs:
  go: circleci/go@1.6.0
  # CircleCI Certified Orb for Golang, 1.6.0 is the orb version
  # https://circleci.com/developer/orbs/orb/circleci/go
jobs:
  test:
  # test jobs runs go mod stage and runs go test
  # The tag specifies the image tag from cimg/go,
  # Ref: https://circleci.com/developer/images/image/cimg/go
    executor:
      name: go/default
      tag: '1.16.2'
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run: bash <(go build)
      - run: make coverage # Run tests with coverage result
      - run: bash <(wget -qO - https://codecov.io/bash) # Push result to CodeCov
        # Install GolangCI-Lint, this might be better off in a different stage
      - run: wget https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh -O - | sh -s -- -b $(go env GOPATH)/bin v1.39.0
      - run: golangci-lint run --timeout 5m
  build:
    executor:
      name: go/default
      tag: '1.16.2'
    steps:
      # depends on completion of test job
      - run: docker login -u $DNAME -p $DPASS
      # https://circleci.com/docs/2.0/building-docker-images/
      - setup_remote_docker
      # TODO: Verify if non docker multi-stage builds are faster and optimize
      - run:
        # The image tagging logic goes here, the env variables aren't exported to further steps
          name: "Build a docker image"
          command: |
            [[ $CIRCLECI_BRANCH == TechPreview* ]] && export IMGTAG=$CIRCLECI_BRANCH || export IMGTAG="master-ci"
            make build
            docker push mayadataio/kubera-auth:$IMGTAG
workflows:
  version: 2
  build:
    jobs:
      # test job should always run
      - test
      # build job should only run on master, TechPreview*, v* branches
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - /TechPreview.*/
                - /^v.*/
            tags:
              only:
              - /.*/
